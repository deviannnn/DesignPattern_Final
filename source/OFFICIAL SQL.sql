USE master
GO
IF exists( SELECT * FROM sysdatabases WHERE name='YAME')
	DROP DATABASE YAME

GO
CREATE DATABASE YAME

GO
USE YAME

------------------- ACCOUNT -------------------
GO
CREATE TABLE ACCOUNT
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[YAME_ID] VARCHAR(10) NULL UNIQUE,
	[GMAIL] VARCHAR(50) NOT NULL UNIQUE,
	[PHONE] VARCHAR(10) NOT NULL UNIQUE,
	[PASSWORD] VARCHAR(150) NOT NULL,
	[NAME] NVARCHAR(40) NOT NULL,
	[GENDER] BIT NOT NULL,
	[ADDRESS] NVARCHAR(100) NOT NULL,
	[LOCKED] BIT DEFAULT 0,
	[ACTIVE] BIT DEFAULT 1,
	[ROLE] NVARCHAR(10) DEFAULT 'STAFF'
)

GO
CREATE TRIGGER GenerateYameId
	ON ACCOUNT
	AFTER INSERT
AS
BEGIN
	DECLARE @AccountId VARCHAR(10)
    DECLARE @NewYameId VARCHAR(10)
    DECLARE @YearPart VARCHAR(2)
    DECLARE @GenderPart CHAR(1)
    DECLARE @RandomPart INT

	SELECT @AccountId = CAST(ID AS VARCHAR(10)) FROM inserted
	SELECT @GenderPart = CASE WHEN GENDER = 1 THEN '1' ELSE '0' END FROM inserted
    SET @YearPart = RIGHT(YEAR(GETDATE()), 2)

	DECLARE @RandomDigits INT = 7 - LEN(@AccountId)
	SET @RandomPart = CAST(RAND() * ((9 * POWER(10, @RandomDigits-1)) + (1 * POWER(10, @RandomDigits-1))) AS INT)

    WHILE 1 = 1
    BEGIN
        SET @NewYameId = @YearPart + @GenderPart + CAST(@RandomPart AS VARCHAR(6)) + @AccountId
        IF LEN(@NewYameId) = 10 AND NOT EXISTS (SELECT 1 FROM ACCOUNT WHERE YAME_ID = @NewYameId)
        BEGIN
            BREAK
        END
		SET @RandomPart = @RandomPart + 1
    END

    UPDATE ACCOUNT
    SET YAME_ID = @NewYameId
    FROM ACCOUNT INNER JOIN inserted ON ACCOUNT.ID = inserted.ID
END

GO
INSERT INTO [ACCOUNT] ([GMAIL], [PHONE], [PASSWORD], [NAME], [GENDER], [ADDRESS], [ROLE])
VALUES ('admin@gmail.com', '0123456789', 'admin', N'Admin', 1, N'123 Test Street', 'ADMIN');

INSERT INTO [ACCOUNT] ([GMAIL], [PHONE], [PASSWORD], [NAME], [GENDER], [ADDRESS])
VALUES ('staff@gmail.com', '0987654321', 'staff', N'Staff', 0, N'456 Test Avenue');


GO
CREATE TABLE USERYAME
(
	TAIKHOAN VARCHAR(60) PRIMARY KEY,
	MATKHAU VARCHAR(20) NOT NULL
)

GO
INSERT INTO USERYAME VALUES ('a','1'),
('b','1')

GO
CREATE TABLE NHANVIEN
(
	MANV VARCHAR(10) PRIMARY KEY,
	TAIKHOAN VARCHAR(60) NOT NULL,
	HOTEN NVARCHAR(40) NOT NULL,
	CHUCVU NVARCHAR(20) NOT NULL
	CONSTRAINT NHANVIEN_TAIKHOAN_FK FOREIGN KEY(TAIKHOAN) REFERENCES USERYAME(TAIKHOAN)
)

GO
INSERT INTO NHANVIEN VALUES ('BHYAME001','a',N'Nguyễn Văn A',N'Bán hàng'),
('QLYAME001','b',N'Nguyễn Văn B',N'Quản lí')

------------------- CUSTOMER -------------------
GO
CREATE TABLE CUSTOMER
(
	[ID] INT IDENTITY(0,1) PRIMARY KEY,
	[YAME_ID] VARCHAR(10) NULL UNIQUE,
	[PHONE] VARCHAR(10) NOT NULL UNIQUE,
	[NAME] NVARCHAR(40) NOT NULL,
	[POINT] INT DEFAULT 0,
	[DISCOUNT] FLOAT DEFAULT 0,
	[ACTIVE] BIT DEFAULT 1
)
GO
INSERT INTO [CUSTOMER] ([YAME_ID], [PHONE], [NAME])
VALUES ('0','0',N'YAME Customer');


GO
CREATE TABLE KHACHHANG
(
	MATV VARCHAR(10) PRIMARY KEY,
	SDT VARCHAR(10) NOT NULL,
	HOTEN NVARCHAR(40) NOT NULL
)
GO
INSERT INTO KHACHHANG VALUES ('0','0',N'Khách Hàng Yame'),
('TVYAME0001','0987654321',N'Thái Tiến Hoa'),
('TVYAME0002','0718491232',N'Lâm Hà My')
delete from KHACHHANG where MATV = 'TVYAME0003'

GO
CREATE TABLE VITHANHVIEN
(
	MATV VARCHAR(10) NOT NULL,
	PHANTRAMGIAM FLOAT NOT NULL,
	TONGTIENTICHLUY INT NOT NULL
	CONSTRAINT VITHANHVIEN_MATV_FK FOREIGN KEY(MATV) REFERENCES KHACHHANG(MATV)
)
GO
INSERT INTO VITHANHVIEN VALUES ('0',0,0),
('TVYAME0001',0.05,600000),
('TVYAME0002',0.12,7600000)


------------------- SIZE_TYPE -------------------
-- DROP TABLE SIZE_TYPE
GO
CREATE TABLE SIZE_TYPE
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[NAME] NVARCHAR(40) NOT NULL,
	[DESCRIPTION] NVARCHAR(100) NULL,
	[ACTIVE] BIT DEFAULT 1
)
GO
INSERT INTO [SIZE_TYPE] ([NAME], [DESCRIPTION]) 
VALUES
('Only 1 size', 'Only having 1 option used for Accessory'),
('SMLXL', 'Character Size Type having 4 options used for Tops and Underwear'),
('29 to 33', 'Having 5 options used for Bottoms'),
('40 to 43', 'Having 4 options used for Footwear')

------------------- SIZES -------------------
-- DROP TABLE SIZES
GO
CREATE TABLE SIZES
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[CODE] VARCHAR(3) NOT NULL,
	[NAME] VARCHAR(10) NOT NULL,
	[SIZE_TYPE_ID] INT NOT NULL,
	[ACTIVE] BIT DEFAULT 1
	FOREIGN KEY (SIZE_TYPE_ID) REFERENCES SIZE_TYPE(ID)
)
GO
INSERT INTO [SIZES] ([CODE], [NAME], [SIZE_TYPE_ID])
VALUES
('000','FREE SIZE', 1), ('001','S', 2), ('002','M', 2), ('003','L', 2), ('004','XL', 2),
('001','29', 3), ('002','30', 3), ('003','31', 3), ('004','32', 3), ('005','33', 3),
('001','40', 4), ('002','41', 4), ('003','42', 4), ('004','43', 4)

------------------- CATEGORY -------------------
-- DROP TABLE CATEGORY
GO
CREATE TABLE CATEGORY
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[NAME] NVARCHAR(40) NOT NULL,
	[SIZE_TYPE_ID] INT NOT NULL,
	[ACTIVE] BIT DEFAULT 1
	FOREIGN KEY (SIZE_TYPE_ID) REFERENCES SIZE_TYPE(ID)
)
GO
INSERT INTO [CATEGORY] ([NAME], [SIZE_TYPE_ID])
VALUES ('Tops', 2), ('Bottoms', 3), ('Underwear', 2), ('Footwear', 4), ('Accessory', 1)

------------------- PRODUCT -------------------
-- DROP TABLE PRODUCT
GO
CREATE TABLE PRODUCT
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[CODE] VARCHAR(7) NULL UNIQUE,
	[NAME] NVARCHAR(50) NOT NULL,
	[COST] FLOAT NOT NULL,
	[PRICE] FLOAT NOT NULL,
	[PERCENT_DISCOUNT] FLOAT NOT NULL,
	[CATEGORY_ID] INT NOT NULL,
	[ACTIVE] BIT DEFAULT 1
	FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID)
)

GO
INSERT INTO [PRODUCT] ([CODE], [NAME], [COST], [PRICE], [PERCENT_DISCOUNT], [CATEGORY_ID])
VALUES
('0000000', N'TEST1', 15, 20, 0, 1),
('0000001', N'TEST2', 15, 40, 0.5, 1),
('0000002', N'TEST3', 20, 39, 0.5, 1)

------------------- PRODUCT_SIZE -------------------
-- DROP TABLE PRODUCT_SIZE
GO
CREATE TABLE PRODUCT_SIZE
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[PRODUCT_ID] INT NOT NULL,
    [SIZES_ID] INT NOT NULL,
	[SKU] VARCHAR(10) NULL UNIQUE,
	[QUANTITY] INT NOT NULL,
	[ACTIVE] BIT DEFAULT 1
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID),
    FOREIGN KEY (SIZES_ID) REFERENCES SIZES(ID)
)

GO
INSERT INTO [PRODUCT_SIZE] ([PRODUCT_ID], [SIZES_ID], [SKU], [QUANTITY])
VALUES 
(1, 2, '0000000001', 20),
(1, 3, '0000000002', 20),
(1, 4, '0000000003', 20),
(1, 5, '0000000004', 20),
(2, 6, '0000001001', 20),
(2, 7, '0000001002', 20),
(2, 8, '0000001003', 20),
(2, 9, '0000001004', 20),
(2, 10, '0000001005', 20),
(3, 1, '0000002000', 20)


GO
CREATE TABLE SANPHAM
(
	MASP VARCHAR(10) PRIMARY KEY,
	TENSP NVARCHAR(120) NOT NULL,
	DONGIA INT NOT NULL,
	PHANTRAMGIAM FLOAT NOT NULL
)
GO
INSERT INTO SANPHAM VALUES ('0020888',N'Áo Thun Cổ Trụ',257000 ,0),
('0020744',N'Áo Thun 3 Lỗ',199000 ,0),
('0020560',N'Áo Khoác Bomber',499000 ,0),
('0020904',N'Áo Khoác Hoodie',427000 ,0.3),
('0018246',N'Áo Sơ Mi Tay Dài',297000 ,0),
('0019773',N'Quần Tây',385000 ,0),
('0021624',N'Quần Jean',425000 ,0),
('0021365',N'Quần Short',287000 ,0),
('0020840',N'Nón Bucket',179000 ,0.3),
('0020082',N'Nón Lưỡi Trai',140000 ,0),
('0015529',N'Vớ Lười',39000 ,0.5),
('0015530',N'Vỡ cổ thấp',39000 ,0),
('0019857',N'Dây Nịt Da',285000 ,0),
('0018923',N'Ví Da',255000 ,0),
('0021545',N'Quần Lót',97000 ,0),
('0021530',N'Balo',257000 ,0),
('0021320',N'Túi Đeo',297000 ,0),
('0020873',N'Giày Tây Da',585000 ,0),
('0021265',N'Giày Sandal',347000 ,0)


GO
CREATE TABLE SANPHAM_SIZE
(
	MASP VARCHAR(10) NOT NULL,
	MASIZE VARCHAR(3) NOT NULL,
	SOLUONG INT NOT NULL
	CONSTRAINT SANPHAM_SIZE_MASP_FK FOREIGN KEY(MASP) REFERENCES SANPHAM(MASP),
	CONSTRAINT SANPHAM_SIZE_MASIZE_FK FOREIGN KEY(MASIZE) REFERENCES SIZE(MASIZE)
)
GO
INSERT INTO SANPHAM_SIZE VALUES ('0020888','001',50),
('0020888','002',100),
('0020888','003',100),
('0020888','004',50),
('0020744','001',50),
('0020744','002',100),
('0020744','003',100),
('0020744','004',50),
('0020560','001',50),
('0020560','002',100),
('0020560','003',100),
('0020560','004',50),
('0020904','001',50),
('0020904','002',100),
('0020904','003',100),
('0020904','004',50),
('0018246','001',50),
('0018246','002',100),
('0018246','003',100),
('0018246','004',50),
('0019773','005',50),
('0019773','006',70),
('0019773','007',80),
('0019773','008',80),
('0019773','009',70),
('0021624','005',50),
('0021624','006',70),
('0021624','007',80),
('0021624','008',80),
('0021624','009',70),
('0021365','005',50),
('0021365','006',100),
('0021365','007',100),
('0021365','008',50),
('0021365','009',50),
('0020840','000',50),
('0020082','000',50),
('0015529','000',50),
('0015530','000',50),
('0019857','000',50),
('0018923','000',50),
('0021545','001',50),
('0021545','002',100),
('0021545','003',100),
('0021545','004',50),
('0021530','000',50),
('0021320','000',50),
('0020873','010',50),
('0020873','011',80),
('0020873','012',80),
('0020873','013',50),
('0021265','010',50),
('0021265','011',80),
('0021265','012',80),
('0021265','013',50)


------------------- INVOICE -------------------
-- DROP TABLE INVOICE
GO
CREATE TABLE INVOICE
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[ACCOUNT_ID] INT NOT NULL,
	[CUSTOMER_ID] INT NOT NULL,
	[CODE] VARCHAR(20) NULL UNIQUE,
	[CREATED_DATE] DATE DEFAULT GETDATE(),
	[EXCHANGE_DATE] DATE DEFAULT DATEADD(WEEK, 1, GETDATE()),
	[VOUCHER_DATE] DATE DEFAULT DATEADD(MONTH, 1, GETDATE()),
	[USED_EXCHANGE] BIT DEFAULT 0,
	[USED_VOUCHER] BIT DEFAULT 0,
	[TOTAL_ITEM] INT DEFAULT 0,
	[TOTAL_ORIGIN] FLOAT DEFAULT 0,
	[DISCOUNT_AMOUNT] FLOAT DEFAULT 0,
	[DISCOUNT_VOUCHER] FLOAT DEFAULT 0,
	[TOTAL_AMOUNT] FLOAT DEFAULT 0,
	[RECEIVE] INT NOT NULL,
	[NEXT_DISCOUNT_VOUCHER] FLOAT DEFAULT 0,
	[MIN_AMOUNT_REQUIRED] INT DEFAULT 0,
	FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT(ID),
	FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID)
)

GO
CREATE TRIGGER GenerateInvoiceCode
    ON INVOICE
    AFTER INSERT
AS
BEGIN
	DECLARE @InvoiceId VARCHAR(10), @CreateDatePart VARCHAR(6), @TotalAmount FLOAT, @DiscountVoucher FLOAT
    DECLARE @NewInvoiceCode VARCHAR(18)
	DECLARE @RandomPart INT

	SELECT 
		@InvoiceId = CAST(ID AS VARCHAR(10)),
		@CreateDatePart = FORMAT(CREATED_DATE, 'ddMMyy'),
		@TotalAmount = TOTAL_AMOUNT,
		@DiscountVoucher = DISCOUNT_VOUCHER 
	FROM inserted

	DECLARE @RandomDigits INT = 10 - LEN(@InvoiceId)
	SET @RandomPart = CAST(RAND() * ((9 * POWER(10, @RandomDigits-1)) + (1 * POWER(10, @RandomDigits-1))) AS INT)

	WHILE 1 = 1
    BEGIN
		SET @NewInvoiceCode = @CreateDatePart + '00' + CAST(@RandomPart AS VARCHAR(9)) + @InvoiceId
        IF LEN(@NewInvoiceCode) = 18 AND NOT EXISTS (SELECT 1 FROM INVOICE WHERE CODE = @NewInvoiceCode)
        BEGIN
            BREAK
        END
		SET @RandomPart = @RandomPart + 1
    END

	DECLARE @AfterDiscount FLOAT = @TotalAmount - @DiscountVoucher
    UPDATE INVOICE
	SET 
		CODE = @NewInvoiceCode,
		TOTAL_AMOUNT = @AfterDiscount,
		NEXT_DISCOUNT_VOUCHER = @AfterDiscount * 0.05,
		MIN_AMOUNT_REQUIRED = @AfterDiscount * 0.5
	FROM INVOICE INNER JOIN inserted ON INVOICE.ID = inserted.ID
END

GO
INSERT INTO [INVOICE] ([ACCOUNT_ID], [CUSTOMER_ID], [RECEIVE])
VALUES (1, 0, 500);

GO
INSERT INTO [INVOICE] ([ACCOUNT_ID], [CUSTOMER_ID],[DISCOUNT_VOUCHER], [RECEIVE])
VALUES (1, 0, 10.5, 250);


------------------- INVOICE_DETAIL -------------------
-- DROP TABLE INVOICE_DETAIL
GO
CREATE TABLE INVOICE_DETAIL
(
	[ID] INT IDENTITY(1,1) PRIMARY KEY,
	[INVOICE_ID] INT NOT NULL,
	[PRODUCT_SIZE_ID] INT NOT NULL,
	[SKU] VARCHAR(10) NOT NULL,
	[QUANTITY] INT NOT NULL,
	[PRICE] FLOAT DEFAULT 0,
	[ORIGIN] FLOAT DEFAULT 0,
	[DISCOUNT] FLOAT DEFAULT 0,
	[AMOUNT] FLOAT DEFAULT 0,
	[EXCHANGE_QUANTITY] INT DEFAULT 0
	FOREIGN KEY(INVOICE_ID) REFERENCES INVOICE(ID),
	FOREIGN KEY(PRODUCT_SIZE_ID) REFERENCES PRODUCT_SIZE(ID),
)

GO
CREATE TRIGGER UpdateInvoiceDetails
	ON INVOICE_DETAIL
	AFTER INSERT
AS
BEGIN
    DECLARE @InvoiceId INT, @ProductSizeId INT, @Quantity INT

    DECLARE @Price FLOAT, @PercentDiscount FLOAT

    -- Get ID, QUANTITY, PRODUCT_SIZE_ID from inserted
    SELECT @InvoiceId = INVOICE_ID, @Quantity = QUANTITY, @ProductSizeId = PRODUCT_SIZE_ID FROM inserted

	-- Truy xuất thông tin giá và giảm giá từ bảng PRODUCT
    SELECT 
        @Price = P.PRICE,
        @PercentDiscount = P.PERCENT_DISCOUNT
    FROM PRODUCT_SIZE PS
    INNER JOIN PRODUCT P ON PS.PRODUCT_ID = P.ID
    INNER JOIN SIZES S ON PS.SIZES_ID = S.ID
    WHERE PS.ID = @ProductSizeId

	DECLARE @Origin FLOAT = @Price * @Quantity
	DECLARE @Discount FLOAT = @Origin * @PercentDiscount
	DECLARE @Amount FLOAT = @Origin - @Discount

	-- Cập nhật các cột của INVOICE_DETAIL
	UPDATE INVOICE_DETAIL
    SET 
        PRICE = @Price,
		ORIGIN = @Origin,
        DISCOUNT = @Discount,
        AMOUNT = @Amount
    FROM INVOICE_DETAIL INNER JOIN inserted ON INVOICE_DETAIL.ID = inserted.ID

    -- Cập nhật các cột của INVOICE
    UPDATE INVOICE
    SET
        TOTAL_ITEM = TOTAL_ITEM + @Quantity,
        TOTAL_ORIGIN = TOTAL_ORIGIN + @Origin,
        DISCOUNT_AMOUNT = DISCOUNT_AMOUNT + @Discount,
		TOTAL_AMOUNT = TOTAL_AMOUNT + @Amount,
        NEXT_DISCOUNT_VOUCHER = NEXT_DISCOUNT_VOUCHER + @Amount * 0.05,
        MIN_AMOUNT_REQUIRED = MIN_AMOUNT_REQUIRED + @Amount * 0.5
    WHERE ID = @InvoiceId

    -- Giảm QUANTITY trong PRODUCT_SIZE
    UPDATE PRODUCT_SIZE
    SET 
        QUANTITY = QUANTITY - @Quantity
    WHERE ID = @ProductSizeId
END

GO
INSERT INTO [INVOICE_DETAIL] ([INVOICE_ID], [PRODUCT_SIZE_ID], [SKU], [QUANTITY])
VALUES (1, 1, '0000000001', 2);
GO
INSERT INTO [INVOICE_DETAIL] ([INVOICE_ID], [PRODUCT_SIZE_ID], [SKU], [QUANTITY])
VALUES (1, 5, '0000001001', 2);
GO
INSERT INTO [INVOICE_DETAIL] ([INVOICE_ID], [PRODUCT_SIZE_ID], [SKU], [QUANTITY])
VALUES (1, 10, '0000002000', 1);
GO
INSERT INTO [INVOICE_DETAIL] ([INVOICE_ID], [PRODUCT_SIZE_ID], [SKU], [QUANTITY])
VALUES (2, 10, '0000002000', 1);

GO
CREATE TABLE HOADON
(
	STT INT IDENTITY(1,1),
	MAHD VARCHAR(20) PRIMARY KEY,
	NGAYLAP DATE DEFAULT GETDATE(),
	NGAYDOITRA DATE DEFAULT DATEADD(week, 1, GETDATE()),
	MANV VARCHAR(10) NOT NULL,
	MATV VARCHAR(10) NOT NULL,
	CONSTRAINT HOADON_MANV_FK FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV),
	CONSTRAINT HOADON_MATV_FK FOREIGN KEY(MATV) REFERENCES KHACHHANG(MATV)
)
GO
INSERT INTO HOADON (MAHD,NGAYLAP,NGAYDOITRA,MANV,MATV) VALUES ('011022000000000001','2022/10/01','2022/10/08','BHYAME001','0')
INSERT INTO HOADON (MAHD,NGAYLAP,NGAYDOITRA,MANV,MATV) VALUES ('301122000000000002','2022/11/30','2022/12/07','BHYAME001','0')
INSERT INTO HOADON (MAHD,NGAYLAP,NGAYDOITRA,MANV,MATV) VALUES ('301122000000000003','2022/11/30','2022/12/07','BHYAME001','0')
INSERT INTO HOADON (MAHD,NGAYLAP,NGAYDOITRA,MANV,MATV) VALUES ('101222000000000004','2022/12/10','2022/12/17','BHYAME001','0')


GO
CREATE TABLE CTHD
(
	MAHD VARCHAR(20) NOT NULL,
	MASP VARCHAR(10) NOT NULL,
	MASIZE VARCHAR(3) NOT NULL,
	SOLUONG INT NOT NULL,
	DONGIA INT NOT NULL,
	PHANTRAMGIAM FLOAT NOT NULL,
	THANHTIEN INT NOT NULL,
	SOLUONGDOI INT DEFAULT 0
	CONSTRAINT CTHD_MAHD_FK FOREIGN KEY(MAHD) REFERENCES HOADON(MAHD),
	CONSTRAINT CTHD_MASP_FK FOREIGN KEY(MASP) REFERENCES SANPHAM(MASP),
	CONSTRAINT CTHD_MASIZE_FK FOREIGN KEY(MASIZE) REFERENCES SIZE(MASIZE)
)
GO
INSERT INTO CTHD (MAHD, MASP, MASIZE, SOLUONG, DONGIA, PHANTRAMGIAM, THANHTIEN) VALUES  ('011022000000000001','0015529','000',1,39000,0.5,19500)
INSERT INTO CTHD (MAHD, MASP, MASIZE, SOLUONG, DONGIA, PHANTRAMGIAM, THANHTIEN) VALUES ('301122000000000002','0015530','000',1,39000,0,39000)
INSERT INTO CTHD (MAHD, MASP, MASIZE, SOLUONG, DONGIA, PHANTRAMGIAM, THANHTIEN) VALUES ('301122000000000003','0018246','001',1,297000,0,297000)
INSERT INTO CTHD (MAHD, MASP, MASIZE, SOLUONG, DONGIA, PHANTRAMGIAM, THANHTIEN) VALUES ('101222000000000004','0018923','000',1,255000,0,255000)


GO
CREATE TABLE BANGTHANHTOAN
(
	MAHD VARCHAR(20) NOT NULL,
	TONGHOADON INT NOT NULL,
	GIAMTRUCTIEP INT NOT NULL,
	GIAMVOUCHER INT NOT NULL,
	TIENPHAITHU INT NOT NULL,
	CONSTRAINT BANGTHANHTOAN_MAHD_FK FOREIGN KEY(MAHD) REFERENCES HOADON(MAHD)
)
GO
INSERT INTO BANGTHANHTOAN (MAHD,TONGHOADON,GIAMTRUCTIEP,GIAMVOUCHER,TIENPHAITHU) VALUES ('011022000000000001',39000,19500,0,20000)
INSERT INTO BANGTHANHTOAN (MAHD,TONGHOADON,GIAMTRUCTIEP,GIAMVOUCHER,TIENPHAITHU) VALUES ('301122000000000002',39000,0,0,39000)
INSERT INTO BANGTHANHTOAN (MAHD,TONGHOADON,GIAMTRUCTIEP,GIAMVOUCHER,TIENPHAITHU) VALUES ('301122000000000003',297000,0,0,297000)
INSERT INTO BANGTHANHTOAN (MAHD,TONGHOADON,GIAMTRUCTIEP,GIAMVOUCHER,TIENPHAITHU) VALUES ('101222000000000004',255000,0,0,255000)


GO
CREATE TABLE VOUCHER
(
	MAHD VARCHAR(20) NOT NULL,
	SUDUNG BIT DEFAULT 0,
	NGAYVOUCHER DATE DEFAULT DATEADD(month, 1, GETDATE()),
	DONTOITHIEU INT NOT NULL,
	TIENGIAMLANSAU INT NOT NULL,
	CONSTRAINT VOUCHER_MAHD_FK FOREIGN KEY(MAHD) REFERENCES HOADON(MAHD)
)
GO
INSERT INTO VOUCHER VALUES ('011022000000000001',0,'2022/11/01',10000,1000)
INSERT INTO VOUCHER VALUES ('301122000000000002',1,'2022/12/30',20000,2000)
INSERT INTO VOUCHER VALUES ('301122000000000003',0,'2022/12/30',149000,14900)
INSERT INTO VOUCHER VALUES ('101222000000000004',0,'2023/01/10',128000,12800)

----------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------ TRIGGER -------------------------------------------------------------

GO -- TRIGGER CAP NHAT SO LUONG KHI THEM CTHD
CREATE TRIGGER tg_SANPHAMSIZE_CAPNHATSOLUONG
	ON CTHD
	AFTER INSERT
AS BEGIN
	DECLARE @MASP VARCHAR(20)
	DECLARE @MASIZE VARCHAR(10)
	DECLARE @SOLUONG INT
	SELECT @MASP = MASP, @MASIZE = MASIZE, @SOLUONG = SOLUONG FROM inserted

	UPDATE SANPHAM_SIZE SET SOLUONG = SOLUONG - @SOLUONG WHERE MASP = @MASP AND MASIZE = @MASIZE
END


GO -- TRIGGER CAP NHAT VI THANH VIEN --
CREATE TRIGGER tg_VITHANHVIEN_CAPNHATPHANTRAM
	ON VITHANHVIEN
	AFTER UPDATE
AS BEGIN
	DECLARE @TONGTIENTICHLUY INT
	DECLARE @MATV VARCHAR(10)
	SELECT @MATV = MATV, @TONGTIENTICHLUY = TONGTIENTICHLUY FROM inserted

	IF @TONGTIENTICHLUY >= 500000 AND @TONGTIENTICHLUY < 1000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.05 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 1000000 AND @TONGTIENTICHLUY < 2000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.06 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 2000000 AND @TONGTIENTICHLUY < 3000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.07 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 3000000 AND @TONGTIENTICHLUY < 4000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.08 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 4000000 AND @TONGTIENTICHLUY < 5000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.09 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 5000000 AND @TONGTIENTICHLUY < 6000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.1 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 6000000 AND @TONGTIENTICHLUY < 7000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.11 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 7000000 AND @TONGTIENTICHLUY < 8000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.12 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 8000000 AND @TONGTIENTICHLUY < 9000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.13 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 9000000 AND @TONGTIENTICHLUY < 10000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.14 WHERE MATV = @MATV
	END
	IF @TONGTIENTICHLUY >= 10000000
	BEGIN
		UPDATE VITHANHVIEN SET PHANTRAMGIAM = 0.15 WHERE MATV = @MATV
	END
END


GO -- TRIGGER CAP NHAT CONG VAO SO LUONG DOI --
CREATE TRIGGER tg_SANPHAMSIZE_CAPNHATSOLUONGDOI
	ON CTHD
	AFTER UPDATE
AS BEGIN
	DECLARE @MASP VARCHAR(20)
	DECLARE @MASIZE VARCHAR(10)
	DECLARE @SOLUONGDOI INT
	SELECT @MASP = MASP, @MASIZE = MASIZE, @SOLUONGDOI = SOLUONGDOI FROM inserted

	UPDATE SANPHAM_SIZE SET SOLUONG = SOLUONG + @SOLUONGDOI WHERE MASP = @MASP AND MASIZE = @MASIZE
END